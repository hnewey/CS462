ruleset track_trips {
	meta {
                use module vehicle_profile
		use module trip_store
		use module edmonds_keys
		use module edmonds_api
				with api_key = keys:edmonds("api_key")
	}

	global {
		long_trip = 20;
		tracks = function() {
			return = trip_store:trips();
		}
	}

	rule process_trips {
		select when car new_trip mileage re#^[+]?([.]\d+|\d+([.]\d+)?)$#
    pre {
      vin = vehicle_profile:car_vin().klog("*******VIN is: ");
      timestamp = time:now();
      mileage = event:attr("mileage").defaultsTo("0");
    }
    send_directive("trip") with
				trip_length = mileage
		fired {
			raise explicit event "trip_processed"
				attributes { "vin": vin, "timestamp": timestamp, "mileage": mileage, "attrs": event:attrs()}
		}
	}

	rule find_long_trips {
		select when explicit trip_processed
		pre {
                        timestamp = time:now();
			mileage = event:attr("mileage");
                        vin = event:attr("vin");
		}
		if mileage > long_trip then
                   noop()
		fired {
    	raise explicit event "found_long_trip"
				attributes { "vin": vin, "timestamp": timestamp, "mileage": mileage, "attrs": event:attr("attrs")}
		}
	}

	rule trip_fuel_usage {
		select when explicit trip_processed
		pre {
			vehicleInfo = "deprecated";
		}
		send_directive("finding_vin") with
			finding_vin = vehicleInfo
	}

	rule create_report {
		select when vehicle get_trips
		pre {
			correlation_id = event:attr("correlation_id").klog("GETTING REPORT AND ID IS ")
			trips = trips();
		}
		fired {
			raise fleet event "receive_report"
				attributes { "dname": "vehicle_report",
										 "correlation_id": correlation_id,
										 "vehicle_report": trips }			
		}
	}
}
